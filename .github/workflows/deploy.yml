name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      - name: Terraform Init
        run: terraform init
        working-directory: terraform/

      - name: Terraform Apply
        id: terraform_apply
        run: terraform apply -auto-approve
        working-directory: terraform/
        
      - name: Get EC2 Public DNS
        id: ec2_output_dns
        run: |
          echo "PUBLIC_DNS<<EOF" >> $GITHUB_ENV
          terraform output -raw instance_public_dns | tr -d '"' >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Get EC2 Private Key
        id: ec2_output_key
        run: |
          echo "PRIVATE_KEY<<EOF" >> $GITHUB_ENV
          terraform output -raw ec2_private_key | tr -d '"' >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

  build_and_deploy:
    name: Build and Deploy Docker Image
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: likhithatangudu/webapp:${{ github.sha }}

      - name: Debug Environment Variables
        run: |
          echo "PUBLIC_DNS: ${{ env.PUBLIC_DNS }}"
          echo "PRIVATE_KEY: ${{ env.PRIVATE_KEY }}"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.0  # Use a specific version
        with:
          host: ${{ env.PUBLIC_DNS }}  # Use the public DNS from the output
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ env.PRIVATE_KEY }}  # Use the private key from the output
          port: 22
          script: |
            if ! command -v docker &> /dev/null
            then
                sudo yum install docker -y
                sudo service docker start
            fi
            sudo docker run -d -p 80:80 likhithatangudu/webapp:${{ github.sha }}
          sync: false
          use_insecure_cipher: false
          timeout: 30s
          command_timeout: 10m
          proxy_port: 22
          proxy_timeout: 30s
          proxy_use_insecure_cipher: false
          script_stop: false
          debug: false
